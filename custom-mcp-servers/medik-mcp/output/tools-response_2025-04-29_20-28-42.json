{
  "result": {
    "tools": [
      {
        "name": "run-query",
        "description": "Run a 1-hop query in mediKanren. Note: If you need comprehensive bidirectional relationships, use get-everything instead as it provides complete coverage.",
        "inputSchema": {
          "type": "object",
          "properties": {
            "e1": {
              "type": "string",
              "description": "X->Known or Known->X, for subject unknown or object unknown respectively."
            },
            "e2": {
              "type": "string",
              "description": "A biolink predicate such as biolink:treats, from the biolink list."
            },
            "e3": {
              "type": "string",
              "description": "A CURIE such as MONDO:0011719; you can ask a Monarch action to get a CURIE from a name."
            }
          },
          "required": [
            "e1",
            "e2",
            "e3"
          ]
        }
      },
      {
        "name": "get-everything",
        "description": "Run both X->Known and Known->X queries with biolink:related_to to get all relationships for a CURIE. This is the recommended comprehensive query that provides complete bidirectional coverage. Do not use run-query if you are using this tool as it would be redundant.",
        "inputSchema": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "description": "A CURIE such as MONDO:0011719; you can ask a Monarch action to get a CURIE from a name."
            }
          },
          "required": [
            "curie"
          ]
        }
      },
      {
        "name": "find-pathway",
        "description": "Find potential connection pathways between two biomedical entities by exploring the knowledge graph",
        "inputSchema": {
          "type": "object",
          "properties": {
            "sourceCurie": {
              "type": "string",
              "description": "CURIE of the first entity (e.g., gene HGNC:1097)"
            },
            "targetCurie": {
              "type": "string",
              "description": "CURIE of the second entity (e.g., disease MONDO:0011719)"
            },
            "maxIterations": {
              "type": "number",
              "description": "Maximum number of exploration iterations (default: 3)"
            },
            "maxNodesPerIteration": {
              "type": "number",
              "description": "Number of candidate nodes to explore in each iteration (default: 5)"
            }
          },
          "required": [
            "sourceCurie",
            "targetCurie"
          ]
        }
      },
      {
        "name": "network-neighborhood",
        "description": "Find genes or proteins that are neighbors in the network.",
        "inputSchema": {
          "type": "object",
          "properties": {
            "curies": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Array of CURIEs (at least 2) representing genes or proteins."
              },
              "minItems": 2,
              "description": "Array of CURIEs (at least 2) representing genes or proteins."
            }
          },
          "required": [
            "curies"
          ]
        }
      }
    ]
  },
  "jsonrpc": "2.0",
  "id": 1
}